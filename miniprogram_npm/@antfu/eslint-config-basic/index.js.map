{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["module.exports = {\n  env: {\n    es6: true,\n    browser: true,\n    node: true,\n  },\n  reportUnusedDisableDirectives: true,\n  extends: [\n    './standard',\n    'plugin:import/recommended',\n    'plugin:eslint-comments/recommended',\n    'plugin:jsonc/recommended-with-jsonc',\n    'plugin:yml/standard',\n    'plugin:markdown/recommended',\n  ],\n  ignorePatterns: [\n    '*.min.*',\n    '*.d.ts',\n    'CHANGELOG.md',\n    'dist',\n    'LICENSE*',\n    'output',\n    'coverage',\n    'public',\n    'temp',\n    'packages-lock.json',\n    'pnpm-lock.yaml',\n    'yarn.lock',\n    '__snapshots__',\n    '!.github',\n    '!.vitepress',\n    '!.vscode',\n  ],\n  plugins: [\n    'html',\n    'unicorn',\n    'antfu',\n  ],\n  settings: {\n    'import/resolver': {\n      node: { extensions: ['.js', '.mjs'] },\n    },\n  },\n  overrides: [\n    {\n      files: ['*.json', '*.json5'],\n      parser: 'jsonc-eslint-parser',\n      rules: {\n        'jsonc/array-bracket-spacing': ['error', 'never'],\n        'jsonc/comma-dangle': ['error', 'never'],\n        'jsonc/comma-style': ['error', 'last'],\n        'jsonc/indent': ['error', 2],\n        'jsonc/key-spacing': ['error', { beforeColon: false, afterColon: true }],\n        'jsonc/no-octal-escape': 'error',\n        'jsonc/object-curly-newline': ['error', { multiline: true, consistent: true }],\n        'jsonc/object-curly-spacing': ['error', 'always'],\n        'jsonc/object-property-newline': ['error', { allowMultiplePropertiesPerLine: true }],\n      },\n    },\n    {\n      files: ['*.yaml', '*.yml'],\n      parser: 'yaml-eslint-parser',\n      rules: {\n        'spaced-comment': 'off',\n      },\n    },\n    {\n      files: ['package.json'],\n      parser: 'jsonc-eslint-parser',\n      rules: {\n        'jsonc/sort-keys': [\n          'error',\n          {\n            pathPattern: '^$',\n            order: [\n              'publisher',\n              'name',\n              'displayName',\n              'type',\n              'version',\n              'private',\n              'packageManager',\n              'description',\n              'author',\n              'license',\n              'funding',\n              'homepage',\n              'repository',\n              'bugs',\n              'keywords',\n              'categories',\n              'sideEffects',\n              'exports',\n              'main',\n              'module',\n              'unpkg',\n              'jsdelivr',\n              'types',\n              'typesVersions',\n              'bin',\n              'icon',\n              'files',\n              'engines',\n              'activationEvents',\n              'contributes',\n              'scripts',\n              'peerDependencies',\n              'peerDependenciesMeta',\n              'dependencies',\n              'optionalDependencies',\n              'devDependencies',\n              'pnpm',\n              'overrides',\n              'resolutions',\n              'husky',\n              'simple-git-hooks',\n              'lint-staged',\n              'eslintConfig',\n            ],\n          },\n          {\n            pathPattern: '^(?:dev|peer|optional|bundled)?[Dd]ependencies$',\n            order: { type: 'asc' },\n          },\n          {\n            pathPattern: '^exports.*$',\n            order: [\n              'types',\n              'require',\n              'import',\n            ],\n          },\n        ],\n      },\n    },\n    {\n      files: ['*.d.ts'],\n      rules: {\n        'import/no-duplicates': 'off',\n      },\n    },\n    {\n      files: ['*.js'],\n      rules: {\n        '@typescript-eslint/no-var-requires': 'off',\n      },\n    },\n    {\n      files: ['scripts/**/*.*', 'cli.*'],\n      rules: {\n        'no-console': 'off',\n      },\n    },\n    {\n      files: ['*.test.ts', '*.test.js', '*.spec.ts', '*.spec.js'],\n      rules: {\n        'no-unused-expressions': 'off',\n      },\n    },\n    {\n      // Code blocks in markdown file\n      files: ['**/*.md/*.*'],\n      rules: {\n        '@typescript-eslint/no-redeclare': 'off',\n        '@typescript-eslint/no-unused-vars': 'off',\n        '@typescript-eslint/no-use-before-define': 'off',\n        '@typescript-eslint/no-var-requires': 'off',\n        '@typescript-eslint/comma-dangle': 'off',\n        'import/no-unresolved': 'off',\n        'no-alert': 'off',\n        'no-console': 'off',\n        'no-restricted-imports': 'off',\n        'no-undef': 'off',\n        'no-unused-expressions': 'off',\n        'no-unused-vars': 'off',\n      },\n    },\n  ],\n  rules: {\n    // import\n    'import/order': 'error',\n    'import/first': 'error',\n    'import/no-mutable-exports': 'error',\n    'import/no-unresolved': 'off',\n    'import/no-absolute-path': 'off',\n\n    // Common\n    'semi': ['error', 'never'],\n    'curly': ['error', 'multi-or-nest', 'consistent'],\n    'quotes': ['error', 'single'],\n    'quote-props': ['error', 'consistent-as-needed'],\n    'no-unused-vars': 'warn',\n    'no-param-reassign': 'off',\n    'array-bracket-spacing': ['error', 'never'],\n    'brace-style': ['error', 'stroustrup', { allowSingleLine: true }],\n    'block-spacing': ['error', 'always'],\n    'camelcase': 'off',\n    'comma-spacing': ['error', { before: false, after: true }],\n    'comma-style': ['error', 'last'],\n    'comma-dangle': ['error', 'always-multiline'],\n    'no-constant-condition': 'warn',\n    'no-debugger': 'error',\n    'no-console': ['error', { allow: ['warn', 'error'] }],\n    'no-cond-assign': ['error', 'always'],\n    'func-call-spacing': ['off', 'never'],\n    'key-spacing': ['error', { beforeColon: false, afterColon: true }],\n    'indent': ['error', 2, { SwitchCase: 1, VariableDeclarator: 1, outerIIFEBody: 1 }],\n    'no-restricted-syntax': [\n      'error',\n      'DebuggerStatement',\n      'LabeledStatement',\n      'WithStatement',\n    ],\n    'object-curly-spacing': ['error', 'always'],\n    'no-return-await': 'off',\n    'space-before-function-paren': [\n      'error',\n      {\n        anonymous: 'always',\n        named: 'never',\n        asyncArrow: 'always',\n      },\n    ],\n    'no-multiple-empty-lines': ['error', { max: 1, maxBOF: 0, maxEOF: 1 }],\n\n    // es6\n    'no-var': 'error',\n    'prefer-const': [\n      'error',\n      {\n        destructuring: 'any',\n        ignoreReadBeforeAssign: true,\n      },\n    ],\n    'prefer-arrow-callback': [\n      'error',\n      {\n        allowNamedFunctions: false,\n        allowUnboundThis: true,\n      },\n    ],\n    'object-shorthand': [\n      'error',\n      'always',\n      {\n        ignoreConstructors: false,\n        avoidQuotes: true,\n      },\n    ],\n    'prefer-exponentiation-operator': 'error',\n    'prefer-rest-params': 'error',\n    'prefer-spread': 'error',\n    'prefer-template': 'error',\n    'template-curly-spacing': 'error',\n    'arrow-parens': ['error', 'as-needed', { requireForBlockBody: true }],\n    'generator-star-spacing': 'off',\n    'spaced-comment': ['error', 'always', {\n      line: {\n        markers: ['/'],\n        exceptions: ['/', '#'],\n      },\n      block: {\n        markers: ['!'],\n        exceptions: ['*'],\n        balanced: true,\n      },\n    }],\n\n    // best-practice\n    'array-callback-return': 'error',\n    'block-scoped-var': 'error',\n    'consistent-return': 'off',\n    'complexity': ['off', 11],\n    'eqeqeq': ['error', 'smart'],\n    'no-alert': 'warn',\n    'no-case-declarations': 'error',\n    'no-multi-spaces': 'error',\n    'no-multi-str': 'error',\n    'no-with': 'error',\n    'no-void': 'error',\n    'no-useless-escape': 'off',\n    'vars-on-top': 'error',\n    'require-await': 'off',\n    'no-return-assign': 'off',\n    'operator-linebreak': ['error', 'before'],\n\n    // unicorns\n    // Pass error message when throwing errors\n    'unicorn/error-message': 'error',\n    // Uppercase regex escapes\n    'unicorn/escape-case': 'error',\n    // Array.isArray instead of instanceof\n    'unicorn/no-instanceof-array': 'error',\n    // Prevent deprecated `new Buffer()`\n    'unicorn/no-new-buffer': 'error',\n    // Keep regex literals safe!\n    'unicorn/no-unsafe-regex': 'off',\n    // Lowercase number formatting for octal, hex, binary (0x1'error' instead of 0X1'error')\n    'unicorn/number-literal-case': 'error',\n    // includes over indexOf when checking for existence\n    'unicorn/prefer-includes': 'error',\n    // String methods startsWith/endsWith instead of more complicated stuff\n    'unicorn/prefer-starts-ends-with': 'error',\n    // textContent instead of innerText\n    'unicorn/prefer-text-content': 'error',\n    // Enforce throwing type error when throwing error while checking typeof\n    'unicorn/prefer-type-error': 'error',\n    // Use new when throwing error\n    'unicorn/throw-new-error': 'error',\n\n    'no-use-before-define': ['error', { functions: false, classes: false, variables: true }],\n    'eslint-comments/disable-enable-pair': 'off',\n    'import/no-named-as-default-member': 'off',\n    'import/no-named-as-default': 'off',\n    'import/namespace': 'off',\n    'n/no-callback-literal': 'off',\n\n    'sort-imports': [\n      'error',\n      {\n        ignoreCase: false,\n        ignoreDeclarationSort: true,\n        ignoreMemberSort: false,\n        memberSyntaxSortOrder: ['none', 'all', 'multiple', 'single'],\n        allowSeparatedGroups: false,\n      },\n    ],\n\n    // yml\n    'yml/quotes': ['error', { prefer: 'single', avoidEscape: false }],\n    'yml/no-empty-document': 'off',\n\n    // antfu\n    'antfu/if-newline': 'error',\n    'antfu/import-dedupe': 'error',\n    // 'antfu/prefer-inline-type-import': 'error',\n  },\n}\n"]}