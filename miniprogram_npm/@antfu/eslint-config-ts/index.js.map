{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["const basic = require('@antfu/eslint-config-basic')\n\nmodule.exports = {\n  extends: [\n    '@antfu/eslint-config-basic',\n    'plugin:import/typescript',\n    'plugin:@typescript-eslint/recommended',\n  ],\n  settings: {\n    'import/resolver': {\n      node: { extensions: ['.js', '.jsx', '.mjs', '.ts', '.tsx', '.d.ts'] },\n    },\n  },\n  overrides: basic.overrides,\n  rules: {\n    'import/named': 'off',\n\n    // TS\n    '@typescript-eslint/ban-ts-comment': ['error', { 'ts-ignore': 'allow-with-description' }],\n    '@typescript-eslint/member-delimiter-style': ['error', { multiline: { delimiter: 'none' } }],\n    '@typescript-eslint/type-annotation-spacing': ['error', {}],\n    '@typescript-eslint/consistent-type-imports': ['error', { prefer: 'type-imports', disallowTypeAnnotations: false }],\n    '@typescript-eslint/consistent-type-definitions': ['error', 'interface'],\n    '@typescript-eslint/prefer-ts-expect-error': 'error',\n\n    // Override JS\n    'no-useless-constructor': 'off',\n    'indent': 'off',\n    '@typescript-eslint/indent': ['error', 2, {\n      SwitchCase: 1,\n      VariableDeclarator: 1,\n      outerIIFEBody: 1,\n      MemberExpression: 1,\n      FunctionDeclaration: { parameters: 1, body: 1 },\n      FunctionExpression: { parameters: 1, body: 1 },\n      CallExpression: { arguments: 1 },\n      ArrayExpression: 1,\n      ObjectExpression: 1,\n      ImportDeclaration: 1,\n      flatTernaryExpressions: false,\n      ignoreComments: false,\n      ignoredNodes: [\n        'TemplateLiteral *',\n        'JSXElement',\n        'JSXElement > *',\n        'JSXAttribute',\n        'JSXIdentifier',\n        'JSXNamespacedName',\n        'JSXMemberExpression',\n        'JSXSpreadAttribute',\n        'JSXExpressionContainer',\n        'JSXOpeningElement',\n        'JSXClosingElement',\n        'JSXFragment',\n        'JSXOpeningFragment',\n        'JSXClosingFragment',\n        'JSXText',\n        'JSXEmptyExpression',\n        'JSXSpreadChild',\n        'TSTypeParameterInstantiation',\n      ],\n      offsetTernaryExpressions: true,\n    }],\n    'no-unused-vars': 'off',\n    '@typescript-eslint/no-unused-vars': ['error', { argsIgnorePattern: '^_' }],\n    'no-redeclare': 'off',\n    '@typescript-eslint/no-redeclare': 'error',\n    'no-use-before-define': 'off',\n    '@typescript-eslint/no-use-before-define': ['error', { functions: false, classes: false, variables: true }],\n    'brace-style': 'off',\n    '@typescript-eslint/brace-style': ['error', 'stroustrup', { allowSingleLine: true }],\n    'comma-dangle': 'off',\n    '@typescript-eslint/comma-dangle': ['error', 'always-multiline'],\n    'object-curly-spacing': 'off',\n    '@typescript-eslint/object-curly-spacing': ['error', 'always'],\n    'semi': 'off',\n    '@typescript-eslint/semi': ['error', 'never'],\n    'quotes': 'off',\n    '@typescript-eslint/quotes': ['error', 'single'],\n    'space-before-blocks': 'off',\n    '@typescript-eslint/space-before-blocks': ['error', 'always'],\n    'space-before-function-paren': 'off',\n    '@typescript-eslint/space-before-function-paren': [\n      'error',\n      {\n        anonymous: 'always',\n        named: 'never',\n        asyncArrow: 'always',\n      },\n    ],\n    'space-infix-ops': 'off',\n    '@typescript-eslint/space-infix-ops': 'error',\n    'keyword-spacing': 'off',\n    '@typescript-eslint/keyword-spacing': ['error', { before: true, after: true }],\n    'comma-spacing': 'off',\n    '@typescript-eslint/comma-spacing': ['error', { before: false, after: true }],\n    'no-extra-parens': 'off',\n    '@typescript-eslint/no-extra-parens': ['error', 'functions'],\n    'no-dupe-class-members': 'off',\n    '@typescript-eslint/no-dupe-class-members': 'error',\n    'no-loss-of-precision': 'off',\n    '@typescript-eslint/no-loss-of-precision': 'error',\n    'lines-between-class-members': 'off',\n    '@typescript-eslint/lines-between-class-members': ['error', 'always', { exceptAfterSingleLine: true }],\n    // The following rule overrides require a parser service, aka. require a `typescript.json` path.\n    // This needs to be done individually for each project, and it slows down linting significantly.\n    // 'no-throw-literal': 'off',\n    // '@typescript-eslint/no-throw-literal': 'error',\n    // 'no-implied-eval': 'off',\n    // '@typescript-eslint/no-implied-eval': 'error',\n    // 'dot-notation': 'off',\n    // '@typescript-eslint/dot-notation': ['error', { allowKeywords: true }],\n\n    // off\n    '@typescript-eslint/consistent-indexed-object-style': 'off',\n    '@typescript-eslint/naming-convention': 'off',\n    '@typescript-eslint/explicit-function-return-type': 'off',\n    '@typescript-eslint/explicit-member-accessibility': 'off',\n    '@typescript-eslint/no-explicit-any': 'off',\n    '@typescript-eslint/parameter-properties': 'off',\n    '@typescript-eslint/no-empty-interface': 'off',\n    '@typescript-eslint/ban-ts-ignore': 'off',\n    '@typescript-eslint/no-empty-function': 'off',\n    '@typescript-eslint/no-non-null-assertion': 'off',\n    '@typescript-eslint/explicit-module-boundary-types': 'off',\n    '@typescript-eslint/ban-types': 'off',\n    '@typescript-eslint/no-namespace': 'off',\n    '@typescript-eslint/triple-slash-reference': 'off',\n  },\n}\n"]}